# Generated by Django 3.1.2 on 2021-12-23 18:41

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AxisCompleteDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('final_city', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('account_ref', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('full_name', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('registration', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('manufacturer', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('chasis_number', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('pos', models.FloatField(blank=True, default=0, null=True)),
                ('bucket', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('address', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('mobile_numer', models.CharField(blank=True, default='', max_length=12, null=True)),
                ('emi_amount', models.FloatField(blank=True, default=0, null=True)),
                ('final_emi_amount', models.FloatField(blank=True, default=0, null=True)),
                ('emi_charges', models.FloatField(blank=True, default=0, null=True)),
                ('total_overdue', models.FloatField(blank=True, default=0, null=True)),
                ('total_od_charges', models.FloatField(blank=True, default=0, null=True)),
                ('engine_number', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('cm_name', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('acm_name', models.CharField(blank=True, default='', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompleteDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hpa_no', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('name', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('brndes', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('rgndes', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('state', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('emp_name', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('outstand', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('age', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('bill1', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('soh', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('assdes', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('status', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('branch', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('regno', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('engno', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('chsno', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('place', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('postoffice', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('road_name', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('landmark', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('city_village', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('state_code', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('district_code', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('taluk', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('website', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('pincode', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('office_phone_no', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('resi_telephone', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('mobile_no', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('pager_no', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('gu_name', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('gu_place', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('gu_postoffice', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('gu_road_name', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('gu_landmark', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('gu_city_village', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('gu_state_des', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('gu_district_des', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('gu_taluk', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('gu_pincode', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('gu_office_phone_no', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('gu_resi_telephone', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('gu_mobile_no', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('cust_fatherName', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('priority_tag', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('october_handling_vertical_name', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('acct_no', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('pdt1', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('emi_amount', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('pos', models.CharField(blank=True, default='', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('aadhar', models.CharField(blank=True, max_length=1024, null=True, verbose_name='aadhar')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
